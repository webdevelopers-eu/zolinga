/* Nice, clean Wiki page documentation style */

/* Anonymize */
xx.title {
    visibility: hidden;
}

@media (prefers-color-scheme: dark) {
    :root {
        --color-fg: 200, 200, 200;
        /* #ffffff */
        --color-bg: 33, 33, 33;
        /* #333333 */
        --color-primary: 0, 182, 64;
        /* #005cb9 */
    }
}

@media (prefers-color-scheme: light) {
    :root {
        --color-fg: 33, 33, 33;
        /* #333333 */
        --color-bg: 255, 255, 255;
        --color-primary: 0, 92, 185;
    }
}

/* all scrollbars are thin */
* {
    scrollbar-color: 
    color-mix(in oklab, rgb(var(--color-fg)) 50%, rgb(var(--color-primary)) 50%) 
    color-mix(in oklab, rgb(var(--color-bg)) 95%, rgb(var(--color-fg)) 5%);
    scrollbar-width: thin;
}

:root {
    color-scheme: light dark;
    
    font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
    font-size: 16px;
    line-height: 1.6;
    color: rgb(var(--color-fg));
    --shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    --radius: 5px;
    --border: 1px solid color-mix(in oklab, rgb(var(--color-bg)) 80%, rgb(var(--color-fg)) 20%);
    
    --link-color-rgb: color-mix(in oklab, rgb(var(--color-primary)), #7777FF);
}

*,
*::before,
*::after {
    box-sizing: border-box;
}

body {
    margin: 0;
    padding: 0;
    background-color: color-mix(in oklab, rgb(var(--color-bg)) 90%, rgb(var(--color-fg)) 10%);
}

.reset {
    display: inline-block;
    aspect-ratio: 1 / 1;
    overflow: hidden;
    vertical-align: middle;
    text-align: center;
    margin: 0;
    cursor: pointer;
    font-size: 1em;
}

.logo {
    display: inline-block;
    position: relative;
    aspect-ratio: 1 / 1;
    height: 1.2em;
    height: 1.2cap;
    min-height: 8px;
    vertical-align: middle;
    
    & .logo-bg {
        fill: rgb(var(--color-primary));
    }
    
    & .logo-fg {
        fill: rgb(var(--color-bg));
    }
    
    &::before {
        content: var(--logo-url);
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }
}

*:where(h1, h2, h3, h4, h5, h6), a.title {
    color: rgb(var(--color-primary));
}

.box {
    background-color: rgb(var(--color-bg));
    border: 1px solid rgb(var(--color-bg));
    border-radius: var(--radius);
    box-shadow: var(--shadow);
}

.fineprint {
    font-size: 0.8em;
    opacity: 0.5;
}

.title {
    display: flex;
    align-items: center;
    font-size: min(1.8em, 5vw);
    margin: 0;
    padding: 0;
    line-height: 1em;
    
    & .logo {
        height: min(2.4em, 10vw);
        flex: 0 0 2.4em;
    }
    
    & .name {
        vertical-align: middle;
        margin: 0em 0.5em;
        font-weight: lighter;
    }
}

/* .wrapper > .panel, .wrapper > .content */
.layout {
    display: grid;
    gap: 1em;
    padding: 1em;
    height: 100dvh;
    width: 100dvw;
    grid-template-columns: 1fr 2fr;
    grid-template-rows: min-content fit-content(100px) 1fr min-content;
    grid-auto-rows: minmax(100px, auto);
    grid-template-areas:
    "title  content"
    "search content"
    "toc    content"
    "footer footer";
    
    @media screen and (max-width: 800px) {
        grid-template-columns: 1fr fit-content(100px);
        grid-template-areas:
        "title   menu"
        "search  search"
        "content content"
        "footer  footer";
    }
    
    @media print {
        grid-template-columns: 1fr;
        grid-template-areas:
        "title"
        "content"
        "footer";
    }
    
    &>.title {
        grid-area: title;
    }
    
    &>.search {
        grid-area: search;
        display: flex;
        flex-direction: column;
        align-items: left;
        align-self: center;
        position: relative;
        
        & label {
            display: flex;
            padding: 0.2em 0.5em;
            
            &::before {
                content: '🔍';
                margin-right: 0.5em;
                font-size: 1.2em;
                filter: grayscale(100%);
                opacity: 0.5;
                transition: all 2s;
            }
        }
        
        &:has(input.searching) label::before {
            filter: none;
            opacity: 1;
            /* animation magnifying glass circling */
            animation: circle 1s linear infinite;
        }
        
        & input {
            width: 100%;
            text-overflow: ellipsis;
            border: 0px;
            padding: 0px;
            background: none;
            margin: 0px;
            
            &:focus {
                outline: none;
            }
        }
        
        &:has(input:placeholder-shown) .search-results {
            display: none;
        }
        
        
        & .search-results {
            display: none;
            margin: 0px;
            padding: 0.5em 2em;
            position: absolute;
            top: calc(100% - var(--radius));
            left: 0em;
            right: 0em;
            z-index: 10;
            x-background-color: color-mix(in oklab, rgb(var(--color-bg)) 90%, rgb(var(--color-fg)) 10%);
            background-color: rgb(var(--color-bg));
            /* border-width: 0px 1px 1px 1px;
            border-style: solid;
            border-color: rgba(var(--color-bg), 0.5); */
            border-radius: 0 0 var(--radius) var(--radius);
            box-shadow: 0px 16px 16px rgba(0, 0, 0, 0.3);
            /* it must not overflow the viewport */
            max-height: 50vh;
            overflow-y: auto;
            overflow-x: hidden;
            
            & li {
                cursor: pointer;
            }
            
            & .search-snippet {
                text-overflow: ellipsis;
                line-clamp: 3;
                /* Set the desired number of lines */
                -webkit-line-clamp: 3;
                /* Safari */
                -webkit-box-orient: vertical;
                display: -webkit-box;
                overflow: hidden;
                
                & b {
                    background-color: rgba(var(--color-primary), 0.2);
                }
            }
        }
        
        &:has(:focus-within, :active, :focus) .search-results {
            display: block;
        }
    }
    
    &>.content {
        grid-area: content;
        display: flex;
        flex-direction: column;
        overflow: auto;
        
        & wiki-article {
            flex: 1 1 auto;
            display: flex;
            flex-direction: column;
        }
    }
    
    &>.footer {
        grid-area: footer;
        text-align: center;
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
        margin: 0em 2em 0em 2em;
        flex-wrap: wrap;
    }
    
    &>.menu {
        grid-area: menu;
        
        &>button {
            font-size: 2em;
            padding: 0em 0.32em;
        }
        
        @media screen and (min-width: 800px) {
            display: none;
        }
    }
    
    &>.toc {
        grid-area: toc;
        overflow-y: auto;
        overflow-x: hidden;
        
        &+.curtain {
            transition: opacity 0.5s;
            position: fixed;
            top: 0;
            left: 0vw;
            width: 100vw;
            height: 100vh;
            background-color: rgba(var(--color-bg), 0.5);
            z-index: 9;
            opacity: 0;
            pointer-events: none;
            backdrop-filter: blur(2px);
        }
        
        @media screen and (max-width: 800px) {
            margin: 0px;
            border-radius: 0px;
            position: fixed;
            top: 0px;
            left: -80vw;
            height: 100vh;
            overflow-y: auto;
            width: 80vw;
            transition: left 0.2s;
            
            &.visible {
                left: 0;
                z-index: 10;
                
                &+.curtain {
                    pointer-events: all;
                    opacity: 1;
                }
            }
        }
    }
}

.toc-toolbar {
    display: flex;
    gap: .5em;
    flex-direction: row;
    justify-content: end;
    align-items: center;
    padding: 0.2em 1em;
    margin: 0em 0em 0.5em 0em;
    border-bottom: var(--border);
    position: sticky;
    top: 0px;
    z-index: 1;
    background-color: rgb(var(--color-bg));
    
    & .text-icon {
        font-size: 1.3em;
    }
}

.toc .hint {
    font-size: 0.8em;
    flex: 1 1 auto;
    opacity: 0.4;
    visibility: hidden;
}

.toc:hover .hint,
.toc:active .hint {
    visibility: visible;
}

html menu.toc {
    margin: 0px 0.5em;
}

menu.toc,
menu.toc menu {
    position: relative;
    --z-anim-speed: 0;
    display: flex;
    flex-direction: column;
    align-items: stretch;
    gap: 0em;
    padding: 0em 0em 0em 1em;
    margin: 0em;
    list-style: none;
    
    & .current {
        font-weight: bold;
    }
    
    & menu:not(.open):not(:has(a.active)) {
        display: none;
    }
    
    & menu.close {
        display: none;
    }
    
    &>li {
        display: flex;
        flex-direction: column;
        flex-wrap: nowrap;
        align-items: stretch;
        justify-content: start;
        position: relative;
        margin-left: 0em;
        
        &>a {
            padding: 0.2em 0em;
            display: flex;
            align-items: start;
            justify-content: flex-start;
            text-decoration: none;
            color: rgb(var(--color-fg));
            transition: color 0.5s;
            line-height: 1.2em;
        }
        
        &::before {
            flex: 0 0 1em;
            content: '▪';
            font-weight: normal;
            text-align: center;
            display: block;
            position: absolute;
            top: 0em;
            left: -1.5em;
            padding: 0em 0.5em;
            color: color-mix(in oklab, rgb(var(--color-primary)) 40%, rgb(var(--color-bg)) 60%);
            margin-right: 0.35em;
        }
        
        &:has(>menu) {
            cursor: context-menu;
            &::before {
                content: '⊞';
            }
        }
        
        &:has(> menu.open)::before {
            content: '⊟';
        }
    }
}

wiki-login {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    flex: 1 1 100%;
    
    & svg {
        width: min(20vh, 15em);
        opacity: 20%;
        aspect-ratio: 1 / 1;
        
        & .logo-bg {
            fill: rgb(var(--color-fg));
        }
        
        & .logo-fg {
            fill: rgb(var(--color-bg));
        }
    }
    
    &:not([data-show="form"]) .wiki-login {
        display: none;
    }
    
    &[data-show="form"] .wiki-login-loading {
        display: none;
    }
    
    & .wiki-login-loading::before {
        content: '🔑';
        font-size: 5em;
        filter: grayscale(100%) opacity(30%);
    }
    
    & .wiki-login {
        display: flex;
        gap: 1em;
        flex-direction: column;
        align-items: center;
        text-align: center;
        
        & small {
            max-width: 320px;
            text-align: center;
            opacity: 0.5;
        }
        
        & input {
            text-align: center;
            letter-spacing: 0.5em;
            
            &::placeholder {
                font-style: normal;
                letter-spacing: 0.1em;
            }
        }
    }
}

/* css for PRINT media */
@media print {
    .noprint {
        display: none !important;
    }
    
    body {
        background-color: transparent;
    }
    
    .box {
        box-shadow: none;
        border: none;
    }
}

@keyframes circle {
    from {
        transform: rotate(0deg) translateX(0.2em) rotate(0deg);
    }
    
    to {
        transform: rotate(360deg) translateX(0.2em) rotate(-360deg);
    }
}